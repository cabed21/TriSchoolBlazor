#pragma checksum "C:\Users\Chris\source\repos\School\SchoolClient\Pages\Students.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "68b2b0c342d09940de72281c679e608fcdc3754e"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SchoolClient.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using SchoolClient;
    using SchoolClient.Shared;
    using SchoolLibrary;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/students")]
    public class Students : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 45 "C:\Users\Chris\source\repos\School\SchoolClient\Pages\Students.razor"
            
    Student[] students;
    string baseUrl = "https://localhost:44323/";
    string StudentId;
    string FirstName;
    string LastName;
    string School;

    protected override async Task OnInitAsync()
    {
        await load();
    }

    protected async Task load()
    {
        students = await httpClient.GetJsonAsync<Student[]>($"{baseUrl}api/students");
    }

    protected async Task insert()
    {
        string endpoint = $"{baseUrl}apl/students";

        Student student = new Student()
        {
            StudentId = Guid.NewGuid().ToString(),
            FirstName = firstName,
            LastName = lastName,
            School = school
        };

        await httpClient.SendJsonAsync(HttpMethod.Post, endpoint, student);
        ClearFields();
        await load();
    }

    protected void ClearFields()
    {
        studentId = string.Empty;
        firstName = string.Empty;
        lastName = string.Empty;
        school = string.Empty;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient httpClient { get; set; }
    }
}
#pragma warning restore 1591
